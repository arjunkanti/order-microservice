server:
  port: 8222
spring:
  datasource:
    url: jdbc:h2:mem:orders_db
    username: sa
    password: welcome
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://dev-7858070.okta.com/oauth2/default/v1/keys
          issuer-uri: https://dev-7858070.okta.com/oauth2/default
  cloud:
    stream:
      bindings:
        output:
          destination: orders-topic-arjun
          content-type: application/json
      kafka:
        binder:
          zkNodes: 159.89.168.63:9092
          brokers: 159.89.168.63:9092
      default-binder: kafka


resilience4j:
  circuitbreaker:
    instances:
      inventoryservice:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        record-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
          - java.lang.IllegalStateException

  retry:
    instances:
      retryService:
        max-retry-attempts: 4
        wait-duration: 5000
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
          - java.lang.IllegalStateException

#security configuration


management:
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"


